#include "matrix.h"
#include <iostream>
#include <random>

using namespace std;

int n = 10;
void evaluacion(){
    matrix a{n,n};
    matrix b{n,n};
    matrix c{n,n};
    matrix d;
    double s = 0;

    std::random_device rd;  //Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
    std::uniform_real_distribution<> dis(1.0, 10.0);
    for (int i = 0; i < a.getSize(); ++i) {
        // Use dis to transform the random unsigned int generated by gen into a
        // double in [1, 2). Each call to dis(gen) generates a new random double
        a.set( i , dis(gen) );
    }

    d = a + static_cast<matrix &&>(b * static_cast<matrix &&>(c));

    for (int i = 0; i < d.getSize(); ++i) {
        s = s + d.get(i);
    }

    s = s/(d.getSize());

    cout << "\n" << "s = " << s << "\n";

}
int main() {
    evaluacion();
    return 0;
}

